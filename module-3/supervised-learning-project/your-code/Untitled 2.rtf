{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red36\green38\blue41;\red235\green236\blue237;\red104\green26\blue29;
\red37\green127\blue159;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;\cssrgb\c49020\c15294\c15294;
\cssrgb\c16863\c56863\c68627;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 for i, elem in enumerate(list):      \'97\'97\'97\'97\'97> returns a tuple with an index.\
	print(i, elem)\
\
in zip \'97 from two lists\
\
import operator\
sorted_tups = sorted(word_freq.items(), key=operator.itemgetter(1))\
word_freq2 = dict(sorted_tups)\
word_freq2\
\
## W2-D2\
- Functions, arguments, how to call a function\
    * Functions\
        - Parameters vs arguments: \
            * Parameters are in the function signature\
            * Arguments are expressions used to call a function\
        - Named Python Functional Parameters (with defaults)\
        - Python Function Parameter Order\
        - Variable Python Function Parameter Lists\
            ```python\
            def lessThan(cutoffVal, *vals) :\
            ''' Return a list of values less than the cutoff. '''\
            arr = []\
            for val in vals :\
                if val < cutoffVal:\
                    arr.append(val)\
            return arr\
            ```\
        - https://www.learnpython.org/en/Functions\
        - *args, **kwargs\
       \
    * Separate code in different files with python modules\
        - Python modules, how they work\
        * __init__.py\
        * https://docs.python.org/3/tutorial/modules.html\
        * https://docs.python.org/3/py-modindex.html\
        * https://pypi.org/\
    * unit testing in python\
        - https://docs.python.org/3/library/unittest.html\
        ```python\
        import unittest\
        class TestStringMethods(unittest.TestCase):\
\
            def test_upper(self):\
                self.assertEqual('foo'.upper(), 'FOO')\
\
            def test_isupper(self):\
                self.assertTrue('FOO'.isupper())\
                self.assertFalse('Foo'.isupper())\
\
\
        if __name__ == '__main__':\
            unittest.main()\
        ```\
- Functional Programming????\
    * Split, Join\
- Error Handling\
    ```python\
    def demo_bad_catch():\
        try:\
            raise Exception('I know Python!')\
            raise ValueError('Represents a hidden bug, do not catch this')\
            raise Exception('This is the exception you expect to handle')\
        except Exception as error:\
            print('Caught this error: ' + repr(error))\
    ```\
    - Capturing errors with Sentry https://docs.sentry.io/clients/python/\
- LAB | Functional Programming (https://github.com/ironhack-labs/data-labs/tree/master/module-1/lab-functional-programming)\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
t = \cf4 'this is the textfile, and it is used to take words and count'\cf2 \
\
dict(\cf5 Counter\cf2 (t.split()))\
>>> \{\cf4 'and'\cf2 : \cf4 2\cf2 , \cf4 'is'\cf2 : \cf4 2\cf2 , \cf4 'count'\cf2 : \cf4 1\cf2 , \cf4 'used'\cf2 : \cf4 1\cf2 , \cf4 'this'\cf2 : \cf4 1\cf2 , \cf4 'it'\cf2 : \cf4 1\cf2 , \cf4 'to'\cf2 : \cf4 1\cf2 , \cf4 'take'\cf2 : \cf4 1
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
*entra dentro de lista si se pone antes de una lista\
\
\pard\pardeftab720\partightenfactor0

\fs32 \cf0 \cb6 \expnd0\expndtw0\kerning0
461639b875a6d1fc64a1f4f3aba7730a\
\
log = True\
\
.scatter only points\
\
\
\
\
\
238223\
40423\
371021\
176553\
186590\
95424\
\pard\pardeftab720\partightenfactor0

\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
}